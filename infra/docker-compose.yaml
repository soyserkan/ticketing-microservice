version: '3'

services:

  auth-service:
    build:
      context: ./../auth-service
      dockerfile: ./../auth-service/Dockerfile
    restart: always
    container_name: auth-service
    ports:
      - "9000:9000"
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - ./../auth-service/production.env
    networks:
      -  ticketing-network-backend

  ticket-service:
    build:
      context: ./../ticket-service
      dockerfile: ./../ticket-service/Dockerfile
    restart: always
    container_name: ticket-service
    ports:
      - "9001:9000"
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - ./../ticket-service/production.env
    depends_on:
      - "rabbitmq"
      - "postgres-ticket"
    networks:
      -  ticketing-network-backend

  order-service:
    build:
      context: ./../order-service
      dockerfile: ./../order-service/Dockerfile
    restart: always
    container_name: order-service
    ports:
      - "9002:9000"
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - ./../order-service/production.env
    depends_on:
      - "rabbitmq"
      - "postgres-order"
    networks:
      -  ticketing-network-backend

  payment-service:
    build:
      context: ./../payment-service
      dockerfile: ./../payment-service/Dockerfile
    restart: always
    container_name: payment-service
    ports:
      - "9003:9000"
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - ./../payment-service/production.env
    depends_on:
      - "rabbitmq"
      - "postgres-payment"
    networks:
      -  ticketing-network-backend

  ticketing-client:
    build:
      context: ./../client
      dockerfile: ./../client/Dockerfile
    container_name: ticketing-client
    ports:
      - '3000:3000'
    networks:
      -  ticketing-network-backend

  expiration-service:
    build:
      context: ./../expiration-service
      dockerfile: ./../expiration-service/Dockerfile
    restart: always
    container_name: expiration-service
    ports:
      - "9004:9000"
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - ./../expiration-service/production.env
    depends_on:
      - "rabbitmq"
      - "redis"
    networks:
      -  ticketing-network-backend

  postgres-auth:
    container_name: postgres-auth
    hostname: postgres-auth
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: auth
    volumes:
      - ./auth:/var/lib/postgresql/data
    networks:
      -  ticketing-network-backend

  postgres-ticket:
    container_name: postgres-ticket
    hostname: postgres-ticket
    image: 'postgres:14.2'
    ports:
      - "5433:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: tickets
    volumes:
      - ./tickets:/var/lib/postgresql/data
    networks:
      -  ticketing-network-backend

  postgres-order:
    container_name: postgres-order
    hostname: postgres-order
    image: 'postgres:14.2'
    ports:
      - "5434:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: orders
    volumes:
      - ./orders:/var/lib/postgresql/data
    networks:
      -  ticketing-network-backend

  postgres-payment:
    container_name: postgres-payment
    hostname: postgres-payment
    image: 'postgres:14.2'
    ports:
      - "5435:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: payments
    volumes:
      - ./payments:/var/lib/postgresql/data
    networks:
      -  ticketing-network-backend

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: 'ticketing-rabbitmq'
    ports:
        - 5673:5672
        - 15673:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      -  ticketing-network-backend

  redis:
    container_name: ticketing-redis
    hostname: redis
    image: redis
    volumes:
      - ./redis:/var/lib/redis/data
    networks:
      - ticketing-network-backend
    expose:
      - 6379
    ports:
      - "6379:6379"

volumes:
  auth:
  tickets:
  redis:
  orders:
  payments:

networks:
  ticketing-network-backend:
    driver: bridge


